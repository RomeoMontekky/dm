plus1(x) := 1 + x
call eval(plus1)
plus2(x) := 0 + x
call eval(plus2)
plus3(x) := x + x
call eval(plus3)
plus4(x, y) := !x + !y
call eval(plus4)
plus4a(x, y) := (x = 0) + (y -> 0)
call eval(plus4a)
plus4b(x) := (x = 0) + (x -> 0)
call eval(plus4b)
plus5(x, y, z) := z + !(x->y) + (x->y) + 1
call eval(plus5)
plus6(x, y) := (x = y) + !(x = y)
call eval(plus6)
plus6a(x, y) := (x = y) + (y = x = 0)
call eval(plus6a)
# absorbation of negation, normalization, simplification
plus7(x, y) := !(x + 1) + !(y + 1)
call eval(plus7)
# checked correct pairs reduction
plus8(x1, x2, x3, x4, x5, x6) := x1 + x2 + x6 + x2 + x1 + x3 + x4 + x4 + x5 + x6
call eval(plus8)
# double re-normalization
plus9(x) := !!(x + 1) + 1
call eval(plus9)
# double negation reduction with literal adding
plus10(x, y) := !(!(x + y) + y) + x
call eval(plus10)
plus11(x, y, z) := ((x + y)->0) + y + !z + x
call eval(plus11)

