conj1(x) := 0 & x
call eval(conj1)
conj2(x) := 1 & x
call eval(conj2)
conj3(x, y) := (x->y) & (x->y) & x
call eval(conj3)
conj4(x, y) := (x + y) & x & !(x + y)
call eval(conj4)
conj5(x) := x & (x = 0)
call eval(conj5)
conj6(x, y) := (x + y) & x & (y + x + 1)
call eval(conj6)
# rule x & !x with grouping
conj7(x, y, z) := !(x & y) & y & z & x
call eval(conj7)
# De Morgan (all)
conj8(x, y) := (x+1) & (y->0)
call eval(conj8)
# De Morgan (half)
conj9(x, y) := !x & y
call eval(conj9)
# De Morgan (child evaluation, in-place normalization and backward transformation)
conj10(x, y, z) := !(x | y | z) & !x
call eval(conj10)