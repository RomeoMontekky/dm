eq1(x) := 1 = x
call eval(eq1)
eq2(x) := 0 = x
call eval(eq2)
eq3(x) := x = x
call eval(eq3)
eq4(x, y) := !x = !y
call eval(eq4)
eq4a(x, y) := (x + 1) = (y -> 0)
call eval(eq4a)
eq5(x, y, z) := z = !(x->y) = (x->y) = 0
call eval(eq5)
eq6(x, y) := (x + y) = !(x + y)
call eval(eq6)
eq6a(x, y) := (x + y) = (y + x + 1)
call eval(eq6a)
# absorbation of negation, normalization, simplification
eq7(x, y) := !(x = 0) = !(y = 0)
call eval(eq7)
# checked correct pairs reduction
eq8(x1, x2, x3, x4, x5, x6) := x1 = x2 = x6 = x2 = x1 = x3 = x4 = x4 = x5 = x6
call eval(eq8)
# double re-normalization
eq9(x) := !!(x = 0) = 0
call eval(eq9)
# double negation reduction with literal adding
eq10(x, y) := !(!(x = y) = y) = x
call eval(eq10)
