   # check of space-expression ignoring

true  # is the same as '1'
false # is the same as '0'

true     := 1         # should be error as 'true' is reserved
false    := 0         # should be error as 'false' is reserved
f1(true) := true + 1  # should be error as 'true' is reserved
f2(true) := false + 1 # should be error as 'false' is reserved
f3(call) := call + 1  # should be error as 'call' is reserved

g1(x) := (x + 1
g2(x) :=  x + 1)
g3(x) := ) x + 1(
g4(x) := (x + 1)
g5(x) := ((((((x))) + (((1))))))
g6(x) := ((((((x))) + (((1))) & (x -> 1))))
